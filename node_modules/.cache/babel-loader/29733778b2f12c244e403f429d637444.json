{"ast":null,"code":"var _jsxFileName = \"/home/aliang/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      className: this.props.row && row.includes(i) ? 'win-square' : undefined,\n      key: i,\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const rows = [...Array(3).keys()].map(i => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, [...Array(3).keys()].map(j => this.renderSquare(3 * i + j))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, rows);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        idx: -1\n      }],\n      isAscending: true,\n      moveNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  changeOrder() {\n    this.setState({\n      isAscending: !this.state.isAscending\n    });\n  }\n\n  getMoves() {\n    const moves = this.state.history.map((data, move) => {\n      const text = 'Go to ' + (move ? 'move #' + move + ' at (' + this.idxToLoc(data.idx) + ')' : 'game start');\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        className: move === this.state.moveNumber ? 'move' : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, text));\n    });\n    return this.state.isAscending ? moves : moves.reverse();\n  }\n\n  getPlayer() {\n    return this.state.xIsNext ? 'X' : 'O';\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.moveNumber + 1);\n    const squares = history[history.length - 1].squares.slice();\n\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n\n    squares[i] = this.getPlayer();\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        idx: i\n      }]),\n      moveNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  idxToLoc(i) {\n    return [i % 3, Math.floor(i / 3)].map(x => x + 1);\n  }\n\n  jumpTo(move) {\n    this.setState({\n      moveNumber: move,\n      xIsNext: !(move % 2)\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const squares = history[this.state.moveNumber].squares;\n    const winner = calculateWinner(squares);\n    const status = winner ? 'Winner ' + winner.name : this.state.moveNumber === 9 ? 'Draw!' : 'Next player: ' + this.getPlayer();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: squares,\n      row: winner ? winner.row : undefined,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, this.getMoves()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeOrder(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 16\n      }\n    }, \"Change Order\"))));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        name: squares[a],\n        row: [a, b, c]\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/aliang/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","row","includes","undefined","squares","render","rows","Array","keys","map","j","Game","constructor","state","history","fill","idx","isAscending","moveNumber","xIsNext","changeOrder","setState","getMoves","moves","data","move","text","idxToLoc","jumpTo","reverse","getPlayer","handleClick","slice","length","calculateWinner","concat","Math","floor","x","winner","status","name","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        className={this.props.row && row.includes(i) ? 'win-square' : undefined}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const rows = [...Array(3).keys()]\n      .map((i) => <div\n        className='board-row'\n        key={i}\n      >{\n        [...Array(3).keys()]\n        .map((j) => this.renderSquare(3 * i + j))\n      }</div>);\n    return (\n      <div>{rows}</div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        idx: -1,\n      }],\n      isAscending: true,\n      moveNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  changeOrder() {\n    this.setState({\n      isAscending: !this.state.isAscending,\n    });\n  }\n\n  getMoves() {\n    const moves = this.state.history.map((data, move) => {\n      const text = 'Go to ' + (move ? 'move #' + move + ' at (' + this.idxToLoc(data.idx) + ')': 'game start');\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            className={move === this.state.moveNumber ? 'move' : undefined}\n          >\n            {text}\n          </button>\n        </li>\n      );\n    });\n\n    return this.state.isAscending ? moves : moves.reverse();\n  }\n\n  getPlayer() {\n    return this.state.xIsNext ? 'X' : 'O';\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.moveNumber + 1);\n    const squares = history[history.length - 1].squares.slice();\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    squares[i] = this.getPlayer();\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        idx: i,\n      }]),\n      moveNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  idxToLoc(i) {\n    return [i % 3, Math.floor(i / 3)].map(x => x + 1);\n  }\n\n  jumpTo(move) {\n    this.setState({\n      moveNumber: move,\n      xIsNext: !(move % 2),\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const squares = history[this.state.moveNumber].squares;\n    const winner = calculateWinner(squares);\n\n    const status = winner ?\n      'Winner ' + winner.name :\n      (this.state.moveNumber === 9 ?\n        'Draw!' :\n        'Next player: ' + this.getPlayer());\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={squares}\n            row={winner ? winner.row: undefined}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{this.getMoves()}</ol>\n          <div><button onClick={() => this.changeOrder()}>Change Order</button></div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {name: squares[a], row: [a, b, c]};\n    }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}